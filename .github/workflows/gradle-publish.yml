name: Smart Forge Mod Builder

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests'
        required: false
        default: false
        type: boolean

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  smart-build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [17]
        exclude:
          - os: windows-latest
            java: 8

    steps:
    # 步骤1：代码检出（使用固定版本）
    - name: Checkout
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0

    # 步骤2：设置JDK（使用固定版本）
    - name: Setup Java
      uses: actions/setup-java@v3.13.0
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'gradle'

    # 步骤3：缓存优化（使用固定版本）
    - name: Cache Gradle
      uses: actions/cache@v3.3.3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle', '**/gradle.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # 步骤4：构建执行
    - name: Build
      shell: bash
      run: |
        # Windows系统处理
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./gradlew.bat build \
            --stacktrace \
            ${{ inputs.skip_tests && '-x test' || '' }}
        else
          chmod +x gradlew
          ./gradlew build \
            --stacktrace \
            ${{ inputs.skip_tests && '-x test' || '' }}
        fi

        # 验证输出
        if ! ls build/libs/*.jar; then
          echo "::error::No JAR files found"
          exit 1
        fi

    # 步骤5：上传产物（使用固定版本）
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: artifact-${{ runner.os }}
        path: |
          build/libs/*.jar
          build/libs/*-sources.jar
        if-no-files-found: error
        retention-days: 3

    # 步骤6：自动发布
    - name: Create Release
      if: success() && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v0.1.16
      with:
        files: build/libs/*.jar
        tag_name: v${{ needs.smart-build.outputs.version }}
        body: |
          Built for Minecraft ${{ needs.smart-build.outputs.mc_version }}
          Forge version: ${{ needs.smart-build.outputs.forge_version }}
