name: Forge Mod CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip test execution'
        required: false
        default: false
        type: boolean

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx2g"
  JAVA_HOME: ${{ matrix.java-home }}

jobs:
  build:
    name: Build (${{ matrix.os }}, Java ${{ matrix.java }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [17]
        include:
          - os: ubuntu-latest
            java: 17
            java-home: /usr/lib/jvm/temurin-17-jdk-amd64
          - os: windows-latest
            java: 17
            java-home: C:\hostedtoolcache\windows\Java_Temurin-Hotspot_jdk\17.0.x\x64

    steps:
    # 步骤1：检出代码
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 步骤2：设置Java环境（显式指定路径）
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: 'gradle'
        check-latest: true

    # 步骤3：验证Java路径
    - name: Verify Java Installation
      shell: bash
      run: |
        echo "JAVA_HOME: $JAVA_HOME"
        if [ ! -d "$JAVA_HOME" ]; then
          echo "::error::Java home directory not found: $JAVA_HOME"
          exit 1
        fi
        "$JAVA_HOME/bin/java" -version

    # 步骤4：配置Gradle使用正确的Java路径
    - name: Configure Gradle
      shell: bash
      run: |
        # 清理可能存在的错误配置
        sed -i '/org.gradle.java.home/d' gradle.properties || true
        
        # Windows系统处理
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "org.gradle.java.home=$JAVA_HOME" >> gradle.properties
          # 转换路径格式
          JAVA_HOME_WIN=$(cygpath -w "$JAVA_HOME")
          echo "Using Java home: $JAVA_HOME_WIN"
        else
          echo "org.gradle.java.home=$JAVA_HOME" >> gradle.properties
        fi

    # 步骤5：执行构建
    - name: Run Gradle build
      shell: bash
      run: |
        # 确保gradlew使用正确的Java路径
        echo "::group::Environment Variables"
        env | sort
        echo "::endgroup::"

        ./gradlew build \
          --no-daemon \
          --stacktrace \
          --info \
         
